name: Build and publish Menhera images

on:
  workflow_run:
    workflows: [Test]
    types:
      - completed
    branches:
      - production

jobs:
  build-and-publish-images:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:

      - name: Check if all tests passed
        if: ${{ github.event.workflow_run.conclusion != 'success' }}
        run: |
          echo "::error title=Tests Failed::I refuse to publish a broken image! Fix Tests >.<"
          exit 1

      - uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare image names
        id: prep
        run: |
          echo ::set-output name=rest_image::ghcr.io/menherabot/rest:latest
          echo ::set-output name=events_image::ghcr.io/menherabot/events:latest
          echo ::set-output name=cache_image::ghcr.io/menherabot/menhera-cache:latest

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.on }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{runner.os}}-multi-buildx

      - name: Build the Base image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.builx.outputs.name }}
          file: Dockerfile
          target: build
          push: false 
          tags: ${{ steps.prep.outputs.cache_image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.builx-cache-new

      - name: Move cache
        run: |
            rm -rf /tmp/.buildx-cache
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache
        
      - name: Build REST image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.builx.outputs.name }}
          file: Dockerfile
          target: rest
          push: true 
          tags: ${{ steps.prep.outputs.rest_image }}
          cache-from: type=local,src=/tmp/.buildx-cache

      - name: Build EVENTS image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.builx.outputs.name }}
          file: Dockerfile
          target: events
          push: true 
          tags: ${{ steps.prep.outputs.events_image }}
          cache-from: type=local,src=/tmp/.buildx-cache